{"version":3,"sources":["webpack:///./src/components/parallax.js","webpack:///./src/components/layer.js","webpack:///./src/components/title-parallax.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ParallaxComponent","componentDidMount","this","parallax","Parallax","scene","componentWillUnmount","disable","render","_this","react_default","a","createElement","className","style","ref","el","props","children","Component","Layer","_ref","_ref$depth","depth","_ref$width","width","_ref$height","height","layer","data-depth","TitleParallax","objectDestructuringEmpty_default","gatsby_browser_entry","query","data","src_components_parallax","src_components_layer","gatsby_image_default","critical","fixed","skull","childImageSharp","sword1","sword2","_1604152115","IndexPage","layout","showTitle","seo","title","keywords","margin","marginTop","title_parallax","textAlign","fontSize","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Header","siteTitle","background","marginBottom","maxWidth","padding","to","color","textDecoration","Layout","_ref$showTitle","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-8d3e4612a1ef413aa832.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport Parallax from 'parallax-js'\r\n\r\nimport style from './parallax.css'\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `StaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `StaticQuery`: https://gatsby.dev/staticquery\r\n */\r\n\r\nclass ParallaxComponent extends Component {\r\n    componentDidMount() {\r\n        this.parallax = new Parallax(this.scene)\r\n    }\r\n    componentWillUnmount() {\r\n        this.parallax.disable()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={style.parallax} ref={el => this.scene = el}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParallaxComponent\r\n","import React from 'react';\r\nimport style from './layer.css'\r\n\r\nconst Layer = ({ depth = 0, children, width = 100, height = 100 }) => (\r\n    <div className={style.layer} data-depth={depth} width={width} height={height}>\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Layer;","import React, { Component } from \"react\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport Parallax from './parallax'\r\nimport Layer from './layer';\r\n\r\n/*\r\n * This component is built using `gatsby-image` to automatically serve optimized\r\n * images with lazy loading and reduced file sizes. The image is loaded using a\r\n * `StaticQuery`, which allows us to load the image from directly within this\r\n * component, rather than having to pass the image data down from pages.\r\n *\r\n * For more information, see the docs:\r\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\r\n * - `StaticQuery`: https://gatsby.dev/staticquery\r\n */\r\n\r\nconst TitleParallax = ({}) => (\r\n    <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        skull: file(relativePath: { eq: \"Skull.png\" }) {\r\n          childImageSharp {\r\n            fixed(width: 512, height: 384) {\r\n                ...GatsbyImageSharpFixed_noBase64\r\n            }\r\n          }\r\n        }\r\n        sword1: file(relativePath: { eq: \"Sword1.png\" }) {\r\n            childImageSharp {\r\n                fixed(width: 512, height: 384) {\r\n                    ...GatsbyImageSharpFixed_noBase64\r\n                }\r\n            }\r\n        }\r\n        sword2: file(relativePath: { eq: \"Sword2.png\" }) {\r\n            childImageSharp {\r\n                fixed(width: 512, height: 384) {\r\n                    ...GatsbyImageSharpFixed_noBase64\r\n                }\r\n            }\r\n        }\r\n      }\r\n    `}\r\n    render={data => \r\n        <Parallax>\r\n            <Layer depth={0.5}>\r\n                <Img critical={true} fixed={data.skull.childImageSharp.fixed}/>\r\n            </Layer>\r\n            <Layer depth={0.4}>\r\n                <Img critical={true} fixed={data.sword1.childImageSharp.fixed}/>\r\n            </Layer>\r\n            <Layer depth={0.6}>\r\n                <Img critical={true} fixed={data.sword2.childImageSharp.fixed}/>\r\n            </Layer>\r\n        </Parallax>\r\n    }\r\n  />\r\n);\r\n\r\nexport default TitleParallax\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport TitleParallax from \"../components/title-parallax\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout showTitle={false}>\r\n    <SEO title=\"Ripoff Games\" keywords={[`gaming`, `video games`, `ripoff games`]} />\r\n    <div style={{ margin: 'auto', marginTop: `5rem`, width: '512px' }}>\r\n      <TitleParallax />\r\n    </div>\r\n    <h1 style={{ textAlign: 'center', marginTop: '6rem', fontSize: '4em' }}>Ripoff Games</h1>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          keywords.length > 0\r\n            ? {\r\n                name: `keywords`,\r\n                content: keywords.join(`, `),\r\n              }\r\n            : []\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `black`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ showTitle = true, children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        {showTitle ? <Header siteTitle={data.site.siteMetadata.title} /> : null}\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `0px 1.0875rem 1.45rem`,\r\n            paddingTop: 0,\r\n          }}\r\n        >\r\n          <main>{children}</main>\r\n          {/* <footer>\r\n            © {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </footer> */}\r\n        </div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}